# This script was generated using an expression much like the following: 
#
#    GLASSProjectSupport
#    	release: ConfigurationOfGLASS
#    	version: '1.0-beta.8.1'
#    	path: '/export/foos2/users/dhenrich/2.0/p_gss64bit/image'
#    	repositoryPath: '/export/foos2/users/dhenrich/2.0/p_gss64bit/examples/monticello/repository'.
#

run
UserGlobals
	at: #BootstrapSymbolDictionaryName
	ifAbsent: [ UserGlobals at: #BootstrapSymbolDictionaryName put: #UserGlobals ].
UserGlobals
	at: #BootstrapRepositoryDirectory
	ifAbsent: [ UserGlobals at: #BootstrapRepositoryDirectory put: './repository/'].
UserGlobals
	at: #BootstrapUseRepositoryDirectory
	ifAbsent: [ UserGlobals at: #BootstrapUseRepositoryDirectory put: true ].
UserGlobals
	at: #BootstrapConfigurationClassName
	ifAbsent: [ UserGlobals at: #BootstrapConfigurationClassName put: 'ConfigurationOfGLASS' ].
UserGlobals
	at: #BootstrapConfigurationLoads
	ifAbsent: [ UserGlobals at: #BootstrapConfigurationLoads put: #() ].
true
%

commit

input $upgradeDir/preBootstrap2.gs
input $upgradeDir/Bootstrap2.gs
input $upgradeDir/postBootstrap2.gs

commit

run
| driver |
driver := GLASSBootstrapDriver new.
UserGlobals at: #BootstrapDriver put: driver.
driver
	bootStrapSymbolDictionary: (System myUserProfile symbolList objectNamed: BootstrapSymbolDictionaryName);
	repositoryDirectory: BootstrapRepositoryDirectory;
	useRepositoryDirectory: BootstrapUseRepositoryDirectory;
	configurationPackageName: 'ConfigurationOfGLASS';
	configurationRepository: 'http://seaside.gemstone.com/ss/MetacelloRepository';
	configurationClass: BootstrapConfigurationClassName;
	configurationPackageLoads: BootstrapConfigurationLoads;
	configurationVersionString: '1.0-beta.8.1';
	metacelloVersionString: '1.0-beta.27.2';
	coreFilenames: { 
		'Core-DaleHenrichs.31.mcz'.
		'Base-Bootstrap-dkh.16.mcz'.
		'Bootstrap-DaleHenrichs.179.mcz'.
		'GemStone-Indexing-Extensions-dkh.3.mcz'.
		'GsRandom-obi.7.mcz'.
		'Sport3.010-dkh.20.mcz'.
		'Squeak-DaleHenrichs.225.mcz'.
		'VB-Regex-STA.19.mcz'.
		'GemStone-Exceptions-Dalehenrichs.35.mcz'.
	 };
	monticelloFilenames: { 
		'PackageInfo-Base.g-dkh.30.mcz'.
		'Monticello.g-DaleHenrichs.405.mcz'.
		'Change-Notification-dkh.3.mcz'.
	 };
	metacelloFilenames: { 
		'Metacello-Core-DaleHenrichs.363.mcz'.
		'Gofer-Core-dkh.121.mcz'.
		'Metacello-MC-DaleHenrichs.417.mcz'.
		'Metacello-Platform.gemstone-DaleHenrichs.16.mcz'.
	 };
	repositoryMap: { 
		'Metacello-Platform' -> {'http://seaside.gemstone.com/ss/metacello'. }.
		'ConfigurationOfGsMisc' -> {'http://seaside.gemstone.com/ss/MetacelloRepository'. }.
		'ConfigurationOfGsMonticello' -> {'http://seaside.gemstone.com/ss/MetacelloRepository'. }.
		'GemStone-Indexing-Extensions' -> {'http://seaside.gemstone.com/ss/QueryExtensions'. }.
		'GsRandom' -> {'http://seaside.gemstone.com/ss/monticello'. }.
		'JadeServer' -> {'http://seaside.gemstone.com/ss/GLASSClient'. }.
		'ConfigurationOfGsCore' -> {'http://seaside.gemstone.com/ss/MetacelloRepository'. }.
		'OB-SUnitIntegration' -> {'http://seaside.gemstone.com/ss/GemStone'. }.
		'Base-Bootstrap' -> {'http://seaside.gemstone.com/ss/monticello'. }.
		'ConfigurationOfMetacello' -> {'http://seaside.gemstone.com/ss/MetacelloRepository'. }.
		'Sport' -> {'http://seaside.gemstone.com/ss/hyper'. }.
		'Gofer-Core' -> {'http://seaside.gemstone.com/ss/metacello'. }.
		'Metacello-MC' -> {'http://seaside.gemstone.com/ss/metacello'. }.
		'OB-Tools' -> {'http://seaside.gemstone.com/ss/GemStone'. }.
		'OB-Metacello' -> {'http://seaside.gemstone.com/ss/metacello'. }.
		'PackageInfo-Base' -> {'http://seaside.gemstone.com/ss/monticello'. }.
		'Change-Notification' -> {'http://seaside.gemstone.com/ss/monticello'. }.
		'Bootstrap' -> {'http://seaside.gemstone.com/ss/monticello'. }.
		'Announcements' -> {'http://seaside.gemstone.com/ss/announcements'. }.
		'OmniBrowser' -> {'http://seaside.gemstone.com/ss/GemStone'. }.
		'ConfigurationOfGLASS' -> {'http://seaside.gemstone.com/ss/MetacelloRepository'. }.
		'OB-GemStone-Platform' -> {'http://seaside.gemstone.com/ss/GemStone'. }.
		'OB-Standard' -> {'http://seaside.gemstone.com/ss/GemStone'. }.
		'OB-SUnitGUI' -> {'http://seaside.gemstone.com/ss/obsunit'. }.
		'OB-Monticello' -> {'http://seaside.gemstone.com/ss/GemStone'. }.
		'VB-Regex' -> {'http://seaside.gemstone.com/ss/VBRegex'. }.
		'Core' -> {'http://seaside.gemstone.com/ss/monticello'. }.
		'Squeak' -> {'http://seaside.gemstone.com/ss/monticello'. }.
		'GemStone-Release-Support' -> {'http://seaside.gemstone.com/ss/GLASSproject'. }.
		'Monticello' -> {'http://seaside.gemstone.com/ss/monticello'. }.
		'GemStone-Exceptions' -> {'http://seaside.gemstone.com/ss/monticello'. }.
		'Metacello-Core' -> {'http://seaside.gemstone.com/ss/metacello'. }.
		'ConfigurationOfGofer' -> {'http://seaside.gemstone.com/ss/MetacelloRepository'. }.
		'ConfigurationOfGsOB' -> {'http://seaside.gemstone.com/ss/MetacelloRepository'. }.
	 }.
true
%

commit
run
BootstrapDriver installMcz.
BootstrapDriver installMetacello.
true
%

# standard configuration install
run
BootstrapDriver installConfigurationPackage.
true
%

run
BootstrapDriver installConfiguration.
SystemOrganizer resetSystemOrganization.
true
%

commit

# install Gofer Project Loader
# see http://code.google.com/p/glassdb/issues/detail?id=105
run
Gofer new
	gemsource: 'MetacelloRepository';
	package: 'ConfigurationOfGoferProjectLoader';
	load.
((Smalltalk at: #ConfigurationOfGoferProjectLoader) project version: '1.0-alpha2.1') load.
true
%

commit

run
UserGlobals removeKey: #BootstrapUseRepositoryDirectory.
UserGlobals removeKey: #BootstrapSymbolDictionaryName.
UserGlobals removeKey: #BootstrapRepositoryDirectory.
UserGlobals removeKey: #BootstrapConfigurationLoads.
UserGlobals removeKey: #BootstrapConfigurationClassName.
UserGlobals removeKey: #BootstrapDriver.
true
%

commit
